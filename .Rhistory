summary(cars)
print(cars)
print(cars)
trainset<-read.csv(file="trainset.csv", header=TRUE)
View(trainset)
testset<-read.csv(file="testset.csv", header=TRUE)
keepthis <- c("gyros_belt_x","gyros_belt_y","gyros_belt_z","accel_belt_x","accel_belt_y","accel_belt_z","magnet_belt_x","magnet_belt_y","magnet_belt_z","roll_arm","pitch_arm","yaw_arm","total_accel_arm","roll_belt","pitch_belt","yaw_belt","total_accel_belt","classe","total_accel_forearm","user_name","gyros_dumbbell_x","gyros_dumbbell_y","gyros_dumbbell_z","accel_dumbbell_x","accel_dumbbell_y","accel_dumbbell_z","magnet_dumbbell_x","magnet_dumbbell_y","magnet_dumbbell_z","roll_forearm","pitch_forearm","yaw_forearm","gyros_forearm_x","gyros_forearm_y","gyros_forearm_z","accel_forearm_x","accel_forearm_y","accel_forearm_z","magnet_forearm_x","magnet_forearm_y","magnet_forearm_z")
trainsetp <- trainset[,keepthis]
smalltrainsetp <-trainsetp[,-"classe"]
smalltrainsetp <-trainsetp[,-"Classe"]
smalltrainsetp <-trainsetp[-"Classe"]
smalltrainsetp <-trainsetp[-"classe"]
smalltrainsetp <-trainsetp[-classe]
smalltrainsetp <- trainsetp[-classe]
smalltrainsetp <- subset(trainsetp,select=-classe)
preProc<-prcomp(trainsetp)
modFit <-train(classe~., data=trainsetp, method="rpart")
library(caret)
library(rpart)
library(AppliedPredictiveModeling)
modFit <-train(classe~., data=trainsetp, method="rpart")
print(modFit$finalModel)
colnames(modFit$finalModel)
names(modFit$finalModel)
pred <- predict(modFit, testset) #outputs our values.
pred
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
pml_write_files(pred)
nums <-sapply(trainsetp,is.numeric)
nums
print(nums)
prePCA.trainsetp<-trainsetp[nums]
preProc<-preProcess(prePCA.trainsetp,method="pca",pcaComp=2)
preProc
preProc<-preProcess(prePCA.trainsetp,method="pca",pcaComp=4)
preProc
trainPC<-predict(preProc, trainsetp)
View(trainPC)
testPC<-predict(preProc, testset)
View(testPC)
testPC<-predict(preProc, testset)
View(testPC)
View(trainPC)
testPC[PC1]
testPC["PC1"]
testPC<-testPC[colnames(trainPC)]
testPC<-testPC[,colnames(trainPC)]
colnames(trainPC)
a<-colnames(trainPC)
View(trainPC)
View(trainPC)
View(testset)
View(trainset)
testPC["classe"]
newnames <-c("user_name", "PC1",       "PC2",       "PC3",       "PC4")
testPC<-testPC[,newnames]
inTrain<- createDataPartition(y=testset$classe, p=0.70, list=FALSE)
inTrain<- createDataPartition(y=trainset$classe, p=0.70, list=FALSE)
validtrain <- testsetp[,inTrain]
validtest <- testsetp[,-inTrain]
inTrain<- createDataPartition(y=trainset$classe, p=0.70, list=FALSE)
validtrain <- trainsetp[,inTrain]
validtest <- trainsetp[,-inTrain]
validtrain <- trainsetp[,inTrain]
inTrain<- createDataPartition(y=trainsetp$classe, p=0.70, list=FALSE)
validtrain <- trainsetp[,inTrain]
validtest <- trainsetp[,-inTrain]
intrain
inTrain
validtrain <- trainsetp[, inTrain]
validtrain <- trainsetp[,as.numeric(inTrain)]
typeof(inTrain)
inTrain<- createDataPartition(y=trainsetp$classe, p=0.70, list=FALSE)
validtrain <- trainsetp[,inTrain]
validytrain <- trainsetp[,inTrain]
validtest <- trainsetp[,-inTrain]
validytrain <- trainsetp[inTrain,]
validtest <- trainsetp[-inTrain,]
validtrain <- trainsetp[inTrain,]
validmodFit <-train(classe~., data=validtrain, method="rpart")
print(modFit$finalModel)
validpred <- predict(modFit, validtest) #outputs our values.
validpred
validpred <- predict(validmodFit, validtest) #outputs our values.
predict(validmodFit, testset)
testPC
trainForest <- cbind(trainPC,trainsetp["classe"])
modFit2 <-train(classe~., data=trainForest, method="rf")
library(caret)
library(rpart)
library(AppliedPredictiveModeling)
trainset<-read.csv(file="trainset.csv", header=TRUE)
testset<-read.csv(file="testset.csv", header=TRUE)
keepthis <- c("gyros_belt_x","gyros_belt_y","gyros_belt_z","accel_belt_x","accel_belt_y","accel_belt_z","magnet_belt_x","magnet_belt_y","magnet_belt_z","roll_arm","pitch_arm","yaw_arm","total_accel_arm","roll_belt","pitch_belt","yaw_belt","total_accel_belt","classe","total_accel_forearm","user_name","gyros_dumbbell_x","gyros_dumbbell_y","gyros_dumbbell_z","accel_dumbbell_x","accel_dumbbell_y","accel_dumbbell_z","magnet_dumbbell_x","magnet_dumbbell_y","magnet_dumbbell_z","roll_forearm","pitch_forearm","yaw_forearm","gyros_forearm_x","gyros_forearm_y","gyros_forearm_z","accel_forearm_x","accel_forearm_y","accel_forearm_z","magnet_forearm_x","magnet_forearm_y","magnet_forearm_z")
trainsetp <- trainset[,keepthis]
inTrain<- createDataPartition(y=trainsetp$classe, p=0.70, list=FALSE)
validtrain <- trainsetp[inTrain,]
validtest <- trainsetp[-inTrain,]
validmodFit <-train(classe~., data=validtrain, method="rpart")
validpred <- predict(validmodFit, validtest) #outputs our values.
accuracy <-cbind(validtest,validpred)
accuracy$accuracy <- ifelse(accuracy$validpred==accuracy$class,1,0)
colSums(accuracy$accuracy)
sum(accuracy$accuracy)
Accuracy<-sum(accuracy$accuracy)/nrow(accuracy)
Accuracy
preProc<-preProcess(prePCA.trainsetp,method="pca",pcaComp=2)
trainPC<-predict(preProc, trainsetp)
testPC<-predict(preProc, testset)
newnames <-c("user_name", "PC1",       "PC2",       "PC3",       "PC4")
testPC<-testPC[,newnames]
trainForest <- cbind(trainPC,trainsetp["classe"])
preProc<-preProcess(prePCA.trainsetp,method="pca",pcaComp=2)
nums <-sapply(trainsetp,is.numeric)
prePCA.trainsetp<-trainsetp[nums]
preProc<-preProcess(prePCA.trainsetp,method="pca",pcaComp=2)
trainPC<-predict(preProc, trainsetp)
testPC<-predict(preProc, testset)
newnames <-c("user_name", "PC1",       "PC2")
testPC<-testPC[,newnames]
modFit2 <-train(classe~., data=trainPC, method="rf")
